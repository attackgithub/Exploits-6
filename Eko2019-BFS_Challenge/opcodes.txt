[#] case 0x1
############
0x0:	add	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2
############
0x0:	add	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3
############
0x0:	add	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4
############
0x0:	add	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5
############
0x0:	add	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6
############
############

[#] case 0x7
############
############

[#] case 0x8
############
0x0:	or	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9
############
0x0:	or	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa
############
0x0:	or	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb
############
0x0:	or	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc
############
0x0:	or	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd
############
0x0:	or	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe
############
############

[#] case 0xf
############
0x0:	cmovs	ecx, dword ptr [rbx - 0x3c3c3cff]
0x7:	ret	
############

[#] case 0x10
############
0x0:	adc	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x11
############
0x0:	adc	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x12
############
0x0:	adc	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x13
############
0x0:	adc	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x14
############
0x0:	adc	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x15
############
0x0:	adc	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x16
############
############

[#] case 0x17
############
############

[#] case 0x18
############
0x0:	sbb	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x19
############
0x0:	sbb	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x1a
############
0x0:	sbb	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x1b
############
0x0:	sbb	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x1c
############
0x0:	sbb	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x1d
############
0x0:	sbb	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x1e
############
############

[#] case 0x1f
############
############

[#] case 0x20
############
0x0:	and	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x21
############
0x0:	and	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x22
############
0x0:	and	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x23
############
0x0:	and	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x24
############
0x0:	and	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x25
############
0x0:	and	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x26
############
0x0:	mov	rax, qword ptr es:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x27
############
############

[#] case 0x28
############
0x0:	sub	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x29
############
0x0:	sub	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2a
############
0x0:	sub	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2b
############
0x0:	sub	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2c
############
0x0:	sub	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2d
############
0x0:	sub	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2e
############
0x0:	mov	rax, qword ptr cs:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x2f
############
############

[#] case 0x30
############
0x0:	xor	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x31
############
0x0:	xor	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x32
############
0x0:	xor	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x33
############
0x0:	xor	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x34
############
0x0:	xor	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x35
############
0x0:	xor	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x36
############
0x0:	mov	rax, qword ptr ss:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x37
############
############

[#] case 0x38
############
0x0:	cmp	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x39
############
0x0:	cmp	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3a
############
0x0:	cmp	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3b
############
0x0:	cmp	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3c
############
0x0:	cmp	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3d
############
0x0:	cmp	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3e
############
0x0:	mov	rax, qword ptr ds:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x3f
############
############

[#] case 0x40
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x41
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x42
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x43
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x44
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x45
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x46
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x47
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x48
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x49
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4a
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4b
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4c
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4d
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4e
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x4f
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x50
############
0x0:	push	rax
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x51
############
0x0:	push	rcx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x52
############
0x0:	push	rdx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x53
############
0x0:	push	rbx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x54
############
0x0:	push	rsp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x55
############
0x0:	push	rbp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x56
############
0x0:	push	rsi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x57
############
0x0:	push	rdi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x58
############
0x0:	pop	rax
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x59
############
0x0:	pop	rcx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5a
############
0x0:	pop	rdx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5b
############
0x0:	pop	rbx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5c
############
0x0:	pop	rsp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5d
############
0x0:	pop	rbp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5e
############
0x0:	pop	rsi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x5f
############
0x0:	pop	rdi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x60
############
############

[#] case 0x61
############
############

[#] case 0x62
############
############

[#] case 0x63
############
0x0:	movsxd	rcx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x64
############
0x0:	mov	rax, qword ptr fs:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x65
############
0x0:	mov	rax, qword ptr gs:[rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x66
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x67
############
0x0:	mov	rax, qword ptr [ecx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x68
############
0x0:	push	-0x3cfe74b8
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x69
############
0x0:	imul	ecx, dword ptr [rax - 0x75], 0xc3c3c301
0x7:	ret	
############

[#] case 0x6a
############
0x0:	push	0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6b
############
0x0:	imul	ecx, dword ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6c
############
0x0:	insb	byte ptr [rdi], dx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6d
############
0x0:	insd	dword ptr [rdi], dx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6e
############
0x0:	outsb	dx, byte ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x6f
############
0x0:	outsd	dx, dword ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x70
############
0x0:	jo	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x71
############
0x0:	jno	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x72
############
0x0:	jb	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x73
############
0x0:	jae	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x74
############
0x0:	je	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x75
############
0x0:	jne	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x76
############
0x0:	jbe	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x77
############
0x0:	ja	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x78
############
0x0:	js	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x79
############
0x0:	jns	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7a
############
0x0:	jp	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7b
############
0x0:	jnp	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7c
############
0x0:	jl	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7d
############
0x0:	jge	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7e
############
0x0:	jle	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x7f
############
0x0:	jg	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x80
############
0x0:	or	byte ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x81
############
0x0:	or	dword ptr [rax - 0x75], 0xc3c3c301
0x7:	ret	
############

[#] case 0x82
############
############

[#] case 0x83
############
0x0:	or	dword ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x84
############
0x0:	test	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x85
############
0x0:	test	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x86
############
0x0:	xchg	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x87
############
0x0:	xchg	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x88
############
0x0:	mov	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x89
############
0x0:	mov	dword ptr [rax - 0x75], ecx
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8a
############
0x0:	mov	cl, byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8b
############
0x0:	mov	ecx, dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8c
############
0x0:	mov	word ptr [rax - 0x75], cs
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8d
############
0x0:	lea	ecx, [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8e
############
0x0:	mov	cs, word ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x8f
############
############

[#] case 0x90
############
0x0:	nop	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x91
############
0x0:	xchg	eax, ecx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x92
############
0x0:	xchg	eax, edx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x93
############
0x0:	xchg	eax, ebx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x94
############
0x0:	xchg	eax, esp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x95
############
0x0:	xchg	eax, ebp
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x96
############
0x0:	xchg	eax, esi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x97
############
0x0:	xchg	eax, edi
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x98
############
0x0:	cwde	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x99
############
0x0:	cdq	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9a
############
############

[#] case 0x9b
############
0x0:	wait	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9c
############
0x0:	pushfq	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9d
############
0x0:	popfq	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9e
############
0x0:	sahf	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0x9f
############
0x0:	lahf	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa0
############
############

[#] case 0xa1
############
############

[#] case 0xa2
############
############

[#] case 0xa3
############
############

[#] case 0xa4
############
0x0:	movsb	byte ptr [rdi], byte ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa5
############
0x0:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa6
############
0x0:	cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa7
############
0x0:	cmpsd	dword ptr [rsi], dword ptr [rdi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa8
############
0x0:	test	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xa9
############
0x0:	test	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xaa
############
0x0:	stosb	byte ptr [rdi], al
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xab
############
0x0:	stosd	dword ptr [rdi], eax
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xac
############
0x0:	lodsb	al, byte ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xad
############
0x0:	lodsd	eax, dword ptr [rsi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xae
############
0x0:	scasb	al, byte ptr [rdi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xaf
############
0x0:	scasd	eax, dword ptr [rdi]
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb0
############
0x0:	mov	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb1
############
0x0:	mov	cl, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb2
############
0x0:	mov	dl, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb3
############
0x0:	mov	bl, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb4
############
0x0:	mov	ah, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb5
############
0x0:	mov	ch, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb6
############
0x0:	mov	dh, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb7
############
0x0:	mov	bh, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb8
############
0x0:	mov	eax, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xb9
############
0x0:	mov	ecx, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xba
############
0x0:	mov	edx, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xbb
############
0x0:	mov	ebx, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xbc
############
0x0:	mov	esp, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xbd
############
0x0:	mov	ebp, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xbe
############
0x0:	mov	esi, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xbf
############
0x0:	mov	edi, 0xc3018b48
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc0
############
0x0:	ror	byte ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc1
############
0x0:	ror	dword ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc2
############
0x0:	ret	0x8b48
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc3
############
0x0:	ret	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc4
############
############

[#] case 0xc5
############
############

[#] case 0xc6
############
############

[#] case 0xc7
############
############

[#] case 0xc8
############
0x0:	enter	-0x74b8, 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xc9
############
0x0:	leave	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xca
############
0x0:	retf	0x8b48
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xcb
############
0x0:	retf	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xcc
############
0x0:	int3	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xcd
############
0x0:	int	0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xce
############
############

[#] case 0xcf
############
0x0:	iretd	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd0
############
0x0:	ror	byte ptr [rax - 0x75], 1
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd1
############
0x0:	ror	dword ptr [rax - 0x75], 1
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd2
############
0x0:	ror	byte ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd3
############
0x0:	ror	dword ptr [rax - 0x75], cl
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd4
############
############

[#] case 0xd5
############
############

[#] case 0xd6
############
############

[#] case 0xd7
############
0x0:	xlatb	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd8
############
0x0:	fmul	dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xd9
############
############

[#] case 0xda
############
0x0:	fimul	dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xdb
############
0x0:	fisttp	dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xdc
############
0x0:	fmul	qword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xdd
############
0x0:	fisttp	qword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xde
############
0x0:	fimul	word ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xdf
############
0x0:	fisttp	word ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe0
############
0x0:	loopne	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe1
############
0x0:	loope	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe2
############
0x0:	loop	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe3
############
0x0:	jrcxz	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe4
############
0x0:	in	al, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe5
############
0x0:	in	eax, 0x48
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe6
############
0x0:	out	0x48, al
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe7
############
0x0:	out	0x48, eax
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe8
############
0x0:	call	0xffffffffc3018b4d
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xe9
############
0x0:	jmp	0xffffffffc3018b4d
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xea
############
############

[#] case 0xeb
############
0x0:	jmp	0x4a
0x2:	mov	eax, dword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xec
############
0x0:	in	al, dx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xed
############
0x0:	in	eax, dx
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xee
############
0x0:	out	dx, al
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xef
############
0x0:	out	dx, eax
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf0
############
############

[#] case 0xf1
############
0x0:	int1	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf2
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf3
############
0x0:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf4
############
0x0:	hlt	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf5
############
0x0:	cmc	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf6
############
0x0:	test	byte ptr [rax - 0x75], 1
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf7
############
0x0:	test	dword ptr [rax - 0x75], 0xc3c3c301
0x7:	ret	
############

[#] case 0xf8
############
0x0:	clc	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xf9
############
0x0:	stc	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xfa
############
0x0:	cli	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xfb
############
0x0:	sti	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xfc
############
0x0:	cld	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xfd
############
0x0:	std	
0x1:	mov	rax, qword ptr [rcx]
0x4:	ret	
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xfe
############
0x0:	dec	byte ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

[#] case 0xff
############
0x0:	dec	dword ptr [rax - 0x75]
0x3:	add	ebx, eax
0x5:	ret	
0x6:	ret	
0x7:	ret	
############

